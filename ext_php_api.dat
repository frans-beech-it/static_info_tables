a:2:{s:4:"meta";a:3:{s:5:"title";s:18:"Static Info Tables";s:5:"descr";s:0:"";s:7:"options";a:2:{s:10:"usageCount";N;s:19:"includeCodeAbstract";s:1:"1";}}s:5:"files";a:1:{s:14:"MD5_273cb9aec4";a:4:{s:8:"filename";s:33:"class.tx_staticinfotables_div.php";s:8:"filesize";i:9904;s:6:"header";a:5:{s:4:"text";s:50:"

Misc functions to access the static info tables
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:2:{i:0;s:41:"@author	René Fritz <r.fritz@colorcube.de>";i:1;s:14:"@package TYPO3";}s:11:"other_index";a:2:{s:7:"@author";a:1:{i:0;s:33:"René Fritz <r.fritz@colorcube.de>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}}}s:3:"DAT";a:6:{i:1;a:8:{s:6:"header";s:31:"class tx_staticInfoTables_div {";s:5:"class";i:1;s:11:"parentClass";s:23:"tx_staticInfoTables_div";s:4:"cDat";a:5:{s:4:"text";s:50:"

Misc functions to access the static info tables
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:2:{i:0;s:41:"@author	René Fritz <r.fritz@colorcube.de>";i:1;s:14:"@package TYPO3";}s:11:"other_index";a:2:{s:7:"@author";a:1:{i:0;s:33:"René Fritz <r.fritz@colorcube.de>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}}}s:7:"content";a:2:{i:0;s:3:"

	";i:1;i:-1;}s:12:"content_size";i:3;s:13:"content_lines";i:2;s:6:"atLine";i:54;}i:3;a:7:{s:6:"header";s:50:"function getTCAlabelField($table, $loadTCA=true) {";s:11:"parentClass";s:23:"tx_staticInfoTables_div";s:4:"cDat";a:3:{s:4:"text";s:49:"

Returns a label field for the current language
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"table name";}i:1;a:2:{i:0;s:7:"boolean";i:1;s:178:"If set (default) the TCA definition of the table should be loaded with t3lib_div::loadTCA(). It will be needed to set it to false if you call this function from inside of tca.php";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:10:"field name";}}s:7:"content";a:2:{i:0;s:483:"		global $TYPO3_CONF_VARS, $TCA;

		$labelField = '';
		if($table) {
			if($loadTCA) {
				t3lib_div::loadTCA($table);
			}

			$lang = strtolower(tx_staticinfotables_div::getCurrentLanguage());

			foreach ($TYPO3_CONF_VARS['EXTCONF']['static_info_tables']['tables'][$table]['label_fields'] as $field) {
				$labelField = str_replace ('##', $lang, $field);
				if(is_array($TCA[$table]['columns'][$labelField])) {
					return $labelField;
				}
			}
		}
		return $labelField;
	}


	";i:1;i:0;}s:12:"content_size";i:483;s:13:"content_lines";i:21;s:6:"atLine";i:64;}i:5;a:7:{s:6:"header";s:49:"function getTCAsortField($table, $loadTCA=true) {";s:11:"parentClass";s:23:"tx_staticInfoTables_div";s:4:"cDat";a:3:{s:4:"text";s:48:"

Returns a sort field for the current language
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"table name";}i:1;a:2:{i:0;s:7:"boolean";i:1;s:65:"If set (default) the TCA definition of the table should be loaded";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:10:"field name";}}s:7:"content";a:2:{i:0;s:76:"		return tx_staticinfotables_div::getTCAlabelField($table, $loadTCA);
	}


	";i:1;i:0;}s:12:"content_size";i:76;s:13:"content_lines";i:4;s:6:"atLine";i:93;}i:7;a:7:{s:6:"header";s:31:"function getCurrentLanguage() {";s:11:"parentClass";s:23:"tx_staticInfoTables_div";s:4:"cDat";a:3:{s:4:"text";s:51:"

Returns the current language as iso-2-alpha code
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:21:"'DE', 'EN', 'DK', ...";}}s:7:"content";a:2:{i:0;s:507:"		global $LANG, $TSFE, $BE_USER;

			// TYPO3 specific: Array with the iso names used for each system language in TYPO3:
		$typo2iso = array(
			'default' => 'EN',
			'ar' => 'AR',
			'eu' => 'EU',
			'bg' => 'BG',
			'ca' => 'CA',
			'ch' => 'ZA',
			'hk' => 'ZH',
			'hr' => 'HR',
			'cz' => 'CS',
			'dk' => 'DA',
			'nl' => 'NL',
			'et' => 'ET',
			'fi' => 'FI',
			'fr'
[...]
	$langCodeT3 = $TSFE->lang;
		}
		$lang = $typo2iso[$langCodeT3];

		return $lang ? $lang : strtoupper($langCodeT3);
	}




	";i:1;i:1;}s:12:"content_size";i:1151;s:13:"content_lines";i:62;s:6:"atLine";i:103;}i:9;a:4:{s:6:"header";s:34:"function selectItemsTCA($params) {";s:11:"parentClass";s:23:"tx_staticInfoTables_div";s:4:"cDat";a:3:{s:4:"text";s:70:"

Function to use in own TCA definitions
Adds additional select items
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:24:"itemsProcFunc data array";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:6:"atLine";i:173;}i:11;a:7:{s:6:"header";s:71:"function updateHotlist ($table, $indexValue, $indexField='', $app='') {";s:11:"parentClass";s:23:"tx_staticInfoTables_div";s:4:"cDat";a:3:{s:4:"text";s:131:"

Updates the hotlist table.
This means that a hotlist entry will be created or the counter of an existing entry will be increased
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:33:"table name: static_countries, ...";}i:1;a:2:{i:0;s:6:"string";i:1;s:34:"value of the following index field";}i:2;a:2:{i:0;s:6:"string";i:1;s:120:"the field which holds the value and is an index field: uid (default) or one of the iso code fields which are also unique";}i:3;a:2:{i:0;s:6:"string";i:1;s:163:"This indicates a counter group. Default is TYPO3_MOD (BE or FE). If you want a unique hotlist for your application you can provide here a name (e.g. extension key)";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"
		if ($table AND $indexValue) {
			$indexField = $indexField ? $indexField : 'uid';
			$app = $app ? $app : TYPO3_MODE;

			if ($indexField=='uid') {
				$uid = $indexValue;

			} else {
					// fetch original record
				$fields = array();
				$fields[$indexField] = $indexField;
				$fields['uid'] = 'uid';

				$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery(implode(',',$fi
[...]
 {
    include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/static_info_tables/class.tx_staticinfotables_div.php']);
}
?>";i:1;i:1;}s:12:"content_size";i:2274;s:13:"content_lines";i:62;s:6:"atLine";i:265;}}}}}